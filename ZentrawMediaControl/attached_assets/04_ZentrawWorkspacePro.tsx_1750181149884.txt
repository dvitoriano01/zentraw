// Arquivo 1: ZentrawWorkspacePRO.tsx - Componente principal
import { useEffect, useRef, useState } from 'react';
import { fabric } from 'fabric';
import ZentrawFXPanel from './ZentrawFXPanel';
import { useHistory } from './ZentrawHistory';

export default function ZentrawWorkspacePRO() {
  const canvasRef = useRef<HTMLCanvasElement>(null);
  const fabricCanvas = useRef<fabric.Canvas | null>(null);
  const [activeObject, setActiveObject] = useState<fabric.Object | null>(null);
  const [objects, setObjects] = useState<fabric.Object[]>([]);
  const [canvasSize, setCanvasSize] = useState({ width: 1080, height: 1080 });
  const fontList = ['Arkhip', 'FreepikFont', 'Arial', 'Georgia'];
  const { saveState, undo, redo } = useHistory(fabricCanvas);

  useEffect(() => {
    fontList.forEach(name => {
      const font = new FontFace(name, `url(/fonts/${name}.ttf)`);
      font.load().then(loaded => document.fonts.add(loaded)).catch(console.error);
    });
  }, []);

  useEffect(() => {
    const canvas = new fabric.Canvas(canvasRef.current!, {
      width: canvasSize.width,
      height: canvasSize.height,
      preserveObjectStacking: true,
      backgroundColor: 'transparent'
    });

    fabricCanvas.current = canvas;

    const bgCanvas = document.createElement('canvas');
    bgCanvas.width = bgCanvas.height = 40;
    const ctx = bgCanvas.getContext('2d')!;
    ctx.fillStyle = '#ccc'; ctx.fillRect(0, 0, 40, 40);
    ctx.fillStyle = '#eee'; ctx.fillRect(0, 0, 20, 20); ctx.fillRect(20, 20, 20, 20);
    const pattern = new fabric.Pattern({ source: bgCanvas, repeat: 'repeat' });
    canvas.setBackgroundColor(pattern, canvas.renderAll.bind(canvas));

    canvas.on('selection:created', e => setActiveObject(e.selected?.[0] || null));
    canvas.on('selection:updated', e => setActiveObject(e.selected?.[0] || null));
    canvas.on('selection:cleared', () => setActiveObject(null));

    canvas.on('object:added', () => { saveState(); setObjects(canvas.getObjects()); });
    canvas.on('object:modified', () => { saveState(); });
    canvas.on('object:removed', () => { saveState(); setObjects(canvas.getObjects()); });

    window.addEventListener('keydown', (e) => {
      if (e.ctrlKey && e.key === 'z') undo();
      if (e.ctrlKey && e.key === 'y') redo();
      if (e.key === 'Delete' && activeObject) {
        canvas.remove(activeObject);
        setActiveObject(null);
        canvas.renderAll();
      }
    });

    return () => canvas.dispose();
  }, [canvasSize]);

  const addText = () => {
    const text = new fabric.Textbox('Texto Zentraw', {
      left: 100,
      top: 100,
      fontSize: 48,
      fontFamily: 'Arkhip',
      fill: '#fff',
      editable: true
    });
    fabricCanvas.current?.add(text);
    fabricCanvas.current?.setActiveObject(text);
  };

  const addOverlay = () => {
    fabric.Image.fromURL('/overlays/grunge1.png', (img) => {
      img.set({ left: 0, top: 0, selectable: true });
      fabricCanvas.current?.add(img);
    });
  };

  const exportPNG = () => {
    const dataUrl = fabricCanvas.current?.toDataURL({ format: 'png', multiplier: 2 });
    const a = document.createElement('a');
    a.href = dataUrl || '';
    a.download = 'cover.png';
    a.click();
  };

  const changeFormat = (format: 'square' | 'story' | 'poster') => {
    const size = {
      square: { width: 1080, height: 1080 },
      story: { width: 1080, height: 1920 },
      poster: { width: 1350, height: 1080 }
    }[format];
    setCanvasSize(size);
  };

  return (
    <div className="h-screen w-screen flex flex-col">
      <div className="h-10 bg-black text-white flex items-center gap-4 px-4 text-sm">
        <span className="font-bold text-purple-400">ZENTRAW PRO</span>
        <button onClick={addText}>Texto</button>
        <button onClick={addOverlay}>Overlay</button>
        <button onClick={() => changeFormat('square')}>Square</button>
        <button onClick={() => changeFormat('story')}>Story</button>
        <button onClick={() => changeFormat('poster')}>Poster</button>
        <button onClick={exportPNG}>Export PNG</button>
      </div>

      <div className="flex flex-1">
        <div className="w-12 bg-neutral-800 text-white p-2 flex flex-col items-center gap-2">
          <button onClick={addText}>T</button>
          <button onClick={addOverlay}>ðŸŽ¨</button>
        </div>

        <div className="flex-1 flex justify-center items-center bg-neutral-700">
          <canvas
            ref={canvasRef}
            width={canvasSize.width}
            height={canvasSize.height}
            className="border border-gray-600 shadow-md"
          />
        </div>

        <div className="w-72 bg-neutral-900 text-white p-4 overflow-y-auto">
          <ZentrawFXPanel object={activeObject} canvasRef={fabricCanvas} fontList={fontList} />
        </div>
      </div>
    </div>
  );
}